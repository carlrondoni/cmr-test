security:
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
            algorithm: 'bcrypt'


    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        api_user:
            memory:
                users:
                    admin1: { password: '$2a$12$ZPuDJLQAlzS2oAQm004cderMsLt9c2Xqjhg6EB1e3Vz5cCbTdC1Qe', roles: ['ROLE_ADMIN']}
                    admin2: { password: '$2a$12$ZeGD9aAsn3oAliMP4SGgL.0Seozi8NgBy6LQJhyls97Q1GngWqV3C', roles: ['ROLE_ADMIN', 'ROLE_SUPER_ADMIN']}

    firewalls:
        login:
            pattern: ^/api/login
            stateless: true
            json_login:
                provider: api_user
                check_path: /api/login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        api:
            pattern: ^/api
            stateless: true
            jwt: ~

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api/login, roles: PUBLIC_ACCESS }
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
